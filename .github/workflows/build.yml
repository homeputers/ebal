name: Build

on:
  push:
    branches: [main]
    paths:
      - 'backend/**'
      - 'frontend/**'
      - '.github/workflows/build.yml'
  pull_request:
    paths:
      - 'backend/**'
      - 'frontend/**'
      - '.github/workflows/build.yml'

jobs:
  backend:
    runs-on: ubuntu-latest
    if: github.event_name == 'push' || contains(github.event.pull_request.changed_files, 'backend/')
    steps:
      - uses: actions/checkout@v4
      - name: Set up PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: '8.1'
      - name: Install dependencies
        run: composer install --no-progress --no-interaction
        working-directory: backend
      - name: PHP syntax check
        run: find . -name '*.php' -print0 | xargs -0 -n1 php -l
        working-directory: backend

  frontend:
    runs-on: ubuntu-latest
    if: github.event_name == 'push' || contains(github.event.pull_request.changed_files, 'frontend/')
    steps:
      - uses: actions/checkout@v4
      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          cache: 'yarn'
          cache-dependency-path: frontend/yarn.lock
      - name: Install dependencies
        run: yarn install --frozen-lockfile
        working-directory: frontend
      - name: Build
        run: yarn build
        working-directory: frontend
      - name: Type check
        run: yarn run check
        working-directory: frontend
  deploy:
    name: Deploy to External Server
    needs: [backend, frontend]
    if: github.ref == 'refs/heads/main'
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          ref: main
          fetch-depth: 0

      - name: Set up SSH
        uses: webfactory/ssh-agent@v0.7.0
        with:
          ssh-private-key: ${{ secrets.SSH_PRIVATE_KEY }}

      - name: Deploy to server
        env:
          REMOTE_APP_DIR: ${{ secrets.APP_DIRECTORY }}
          REMOTE_PROD_SERVER_NAME: ${{ secrets.PROD_SERVER_NAME }}
        run: |
          ssh -o StrictHostKeyChecking=no ${{ secrets.SSH_USER }}@${{ secrets.SSH_HOST }} "REMOTE_APP_DIR='$REMOTE_APP_DIR' REMOTE_PROD_SERVER_NAME='$REMOTE_PROD_SERVER_NAME' bash -s" <<'DEPLOY'
            set -e
            set -x # Enable command tracing

            cd "$REMOTE_APP_DIR"

            echo "Checking out main branch..."
            git checkout main
            echo "- Checked out main branch."
            echo "Pulling latest changes from origin main..."
            git pull origin main
            echo "- Git pull completed."

            echo "Taking Docker services down..."
            docker compose down
            echo "- Docker services down."

            echo "Building Docker services (no-cache)..."
            docker compose build --no-cache
            echo "- Docker build completed."

            echo "Bringing Docker services up (detached)..."
            ENV_SERVER_NAME="$REMOTE_PROD_SERVER_NAME" docker compose up -d
            echo "- Docker services up."

            echo "Deployment script finished successfully."
            set +x # Disable command tracing
          DEPLOY

openapi: 3.0.3
info:
  title: Worship Team API
  version: 1.0.0
servers:
  - url: http://localhost:8080/api
paths:
  /members:
    get:
      summary: List members
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Member'
    post:
      summary: Create member
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Member'
      responses:
        '201':
          description: Created
  /members/{id}:
    get:
      summary: Get member
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Member'
    put:
      summary: Update member
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: integer
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Member'
      responses:
        '200':
          description: Updated
    delete:
      summary: Delete member
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: integer
      responses:
        '204':
          description: Deleted
  /groups:
    get:
      summary: List groups
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Group'
    post:
      summary: Create group
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Group'
      responses:
        '201':
          description: Created
  /groups/{id}:
    get:
      summary: Get group
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Group'
    put:
      summary: Update group
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: integer
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Group'
      responses:
        '200':
          description: Updated
    delete:
      summary: Delete group
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: integer
      responses:
        '204':
          description: Deleted
  /groups/{id}/members:
    post:
      summary: Add member to group
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: integer
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                member_id:
                  type: integer
      responses:
        '201':
          description: Added
  /groups/{id}/members/{member_id}:
    delete:
      summary: Remove member from group
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: integer
        - in: path
          name: member_id
          required: true
          schema:
            type: integer
      responses:
        '204':
          description: Removed
  /lineup-templates:
    get:
      summary: List lineup templates
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/LineupTemplate'
    post:
      summary: Create lineup template
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/LineupTemplate'
      responses:
        '201':
          description: Created
  /lineup-templates/{id}:
    get:
      summary: Get lineup template
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LineupTemplate'
    put:
      summary: Update lineup template
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: integer
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/LineupTemplate'
      responses:
        '200':
          description: Updated
    delete:
      summary: Delete lineup template
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: integer
      responses:
        '204':
          description: Deleted
  /lineup-templates/{id}/groups:
    post:
      summary: Add group to template
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: integer
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                group_id:
                  type: integer
                count:
                  type: integer
      responses:
        '201':
          description: Added
  /lineup-templates/{id}/groups/{group_id}:
    put:
      summary: Update group on template
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: integer
        - in: path
          name: group_id
          required: true
          schema:
            type: integer
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                count:
                  type: integer
      responses:
        '200':
          description: Updated
    delete:
      summary: Remove group from template
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: integer
        - in: path
          name: group_id
          required: true
          schema:
            type: integer
      responses:
        '204':
          description: Removed
  /lineups:
    get:
      summary: List lineups
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Lineup'
    post:
      summary: Create lineup
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Lineup'
      responses:
        '201':
          description: Created
  /lineups/{id}:
    get:
      summary: Get lineup
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Lineup'
    put:
      summary: Update lineup
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: integer
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Lineup'
      responses:
        '200':
          description: Updated
    delete:
      summary: Delete lineup
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: integer
      responses:
        '204':
          description: Deleted
  /lineups/{id}/members:
    post:
      summary: Add member to lineup
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: integer
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                member_id:
                  type: integer
                group_id:
                  type: integer
      responses:
        '201':
          description: Added
  /lineups/{id}/members/{member_id}:
    put:
      summary: Replace or update member
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: integer
        - in: path
          name: member_id
          required: true
          schema:
            type: integer
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                member_id:
                  type: integer
                group_id:
                  type: integer
      responses:
        '200':
          description: Updated
    delete:
      summary: Remove member from lineup
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: integer
        - in: path
          name: member_id
          required: true
          schema:
            type: integer
      responses:
        '204':
          description: Removed
  /song-categories:
    get:
      summary: List song categories
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/SongCategory'
    post:
      summary: Create song category
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SongCategory'
      responses:
        '201':
          description: Created
  /song-categories/{id}:
    get:
      summary: Get song category
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SongCategory'
    put:
      summary: Update song category
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: integer
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SongCategory'
      responses:
        '200':
          description: Updated
    delete:
      summary: Delete song category
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: integer
      responses:
        '204':
          description: Deleted
  /songs:
    get:
      summary: List songs
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Song'
    post:
      summary: Create song
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Song'
      responses:
        '201':
          description: Created
  /songs/{id}:
    get:
      summary: Get song
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Song'
    put:
      summary: Update song
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: integer
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Song'
      responses:
        '200':
          description: Updated
    delete:
      summary: Delete song
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: integer
      responses:
        '204':
          description: Deleted
  /song-lists:
    get:
      summary: List song lists
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/SongList'
    post:
      summary: Create song list
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SongList'
      responses:
        '201':
          description: Created
  /song-lists/{id}:
    get:
      summary: Get song list
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SongList'
    put:
      summary: Update song list
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: integer
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SongList'
      responses:
        '200':
          description: Updated
    delete:
      summary: Delete song list
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: integer
      responses:
        '204':
          description: Deleted
  /song-lists/{id}/songs:
    post:
      summary: Add song to list
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: integer
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                song_id:
                  type: integer
                order:
                  type: integer
                actual_key:
                  type: string
                version:
                  type: string
                notes:
                  type: string
      responses:
        '201':
          description: Added
  /song-lists/{id}/songs/{song_id}:
    put:
      summary: Replace or update song
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: integer
        - in: path
          name: song_id
          required: true
          schema:
            type: integer
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                song_id:
                  type: integer
                order:
                  type: integer
                actual_key:
                  type: string
                version:
                  type: string
                notes:
                  type: string
      responses:
        '200':
          description: Updated
    delete:
      summary: Remove song from list
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: integer
        - in: path
          name: song_id
          required: true
          schema:
            type: integer
      responses:
        '204':
          description: Removed
components:
  schemas:
    Member:
      type: object
      properties:
        id:
          type: integer
        name:
          type: string
        email:
          type: string
        phone:
          type: string
        group_ids:
          type: array
          items:
            type: integer
    Group:
      type: object
      properties:
        id:
          type: integer
        name:
          type: string
        description:
          type: string
    LineupTemplate:
      type: object
      properties:
        id:
          type: integer
        name:
          type: string
    Lineup:
      type: object
      properties:
        id:
          type: integer
        service_datetime:
          type: string
          format: date-time
        template_id:
          type: integer
    SongCategory:
      type: object
      properties:
        id:
          type: integer
        name:
          type: string
        description:
          type: string
    Song:
      type: object
      properties:
        id:
          type: integer
        category_id:
          type: integer
        title:
          type: string
        original_key:
          type: string
        original_author:
          type: string
    SongList:
      type: object
      properties:
        id:
          type: integer
        lineup_id:
          type: integer
        author:
          type: string
